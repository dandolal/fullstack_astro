{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/daniil/WebstormProjects/untitled1/src/components/add_problem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport Problem from \"../problem/Problem\";\nimport { addProblem, toInit } from \"../action\";\n\nfunction AddProblem(props) {\n  _s();\n\n  const [state, setState] = useState({\n    name: '',\n    task: '',\n    solution: '',\n    author: ''\n  });\n\n  const handleChangeName = event => {\n    setState({ ...state,\n      name: event.target.value\n    });\n  };\n\n  const handleChangeTask = event => {\n    setState({ ...state,\n      task: event.target.value\n    });\n  };\n\n  const handleChangeSolution = event => {\n    setState({ ...state,\n      solution: event.target.value\n    });\n  };\n\n  const handleChangeAuthor = event => {\n    setState({ ...state,\n      author: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const {\n      name,\n      task,\n      solution,\n      author\n    } = state;\n    props.addProblem(new Problem(name, task, solution, author, props.user.login)).then(() => {\n      console.log(name, task, solution);\n      props.history.push(`/problems`);\n      props.reload();\n    });\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n    }\n  };\n\n  let {\n    name,\n    task,\n    solution,\n    author\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: handleChangeName,\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), \"\\u0423\\u0441\\u043B\\u043E\\u0432\\u0438\\u0435:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: task,\n          onChange: handleChangeTask,\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), \"\\u0420\\u0435\\u0448\\u0435\\u043D\\u0438\\u0435:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: solution,\n          onChange: handleChangeSolution,\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), \"\\u0410\\u0432\\u0442\\u043E\\u0440:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: author,\n          onChange: handleChangeAuthor,\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n        className: \"btn btn-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddProblem, \"FOmJFFJ6Vxz2ZNAMGPcX03ZPR5Q=\");\n\n_c = AddProblem;\n\nconst mapStateToProps = state => {\n  return {\n    problems_list: state.userReducer.problems,\n    user: state.userReducer.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    reload: (...args) => dispatch(toInit(...args)),\n    editProblem: (...args) => dispatch(addProblem(...args))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProblem);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProblem\");","map":{"version":3,"sources":["/home/daniil/WebstormProjects/untitled1/src/components/add_problem.js"],"names":["React","useState","connect","Problem","addProblem","toInit","AddProblem","props","state","setState","name","task","solution","author","handleChangeName","event","target","value","handleChangeTask","handleChangeSolution","handleChangeAuthor","handleSubmit","preventDefault","user","login","then","console","log","history","push","reload","handleKeyDown","key","mapStateToProps","problems_list","userReducer","problems","mapDispatchToProps","dispatch","args","editProblem"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport Problem from \"../problem/Problem\";\nimport {addProblem, toInit} from \"../action\";\n\nfunction  AddProblem(props){\n\n\n    const [state, setState] = useState({name: '',\n        task: '',\n        solution: '',\n        author: ''})\n\n\n    const handleChangeName = (event) => {\n        setState({...state, name: event.target.value});\n    }\n    const handleChangeTask = (event) => {\n        setState({...state, task: event.target.value});\n    }\n    const handleChangeSolution = (event) => {\n        setState({...state, solution: event.target.value});\n    }\n    const handleChangeAuthor = (event) => {\n        setState({...state, author: event.target.value});\n    }\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const {name, task, solution, author} = state;\n        props.addProblem(new Problem(name, task, solution, author, props.user.login)).then(() => {\n            console.log(name, task, solution)\n\n            props.history.push(`/problems`);\n            props.reload()\n        })\n    }\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n        }\n    }\n\n\n    let {name, task, solution, author} = state;\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    Название:\n                    <input type=\"text\" value={name} onChange={handleChangeName}\n                           onKeyDown={handleKeyDown}/>\n                    Условие:\n                    <input type=\"text\" value={task} onChange={handleChangeTask}\n                           onKeyDown={handleKeyDown}/>\n                    Решение:\n                    <input type=\"text\" value={solution} onChange={handleChangeSolution}\n                           onKeyDown={handleKeyDown}/>\n                    Автор:\n                    <input type=\"text\" value={author} onChange={handleChangeAuthor}\n                           onKeyDown={handleKeyDown}/>\n                </label>\n                <input type=\"submit\" value=\"Сохранить\" className=\"btn btn-primary\"/>\n            </form>\n        </div>\n    );\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        problems_list: state.userReducer.problems,\n        user: state.userReducer.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        reload: (...args) => dispatch(toInit(...args)),\n        editProblem :(...args) => dispatch(addProblem(...args)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProblem);"]},"metadata":{},"sourceType":"module"}