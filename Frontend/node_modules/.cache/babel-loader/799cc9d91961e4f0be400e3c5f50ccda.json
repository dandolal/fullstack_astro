{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/daniil/WebstormProjects/untitled1/src/components/login_page.js\";\nimport React from 'react';\nimport { problems_list, user } from \"./globals\";\nimport Header from \"../model\";\nimport { connect } from \"react-redux\";\n\nclass login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.login = '';\n    this.password = '';\n    this.state = {\n      login: '',\n      password: ''\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } // state = {\n  //     login: '',\n  //     password: '',\n  // }\n\n\n  handleLoginChange(event) {\n    this.setState({\n      login: event.target.value\n    });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const {\n      login,\n      password\n    } = this.state;\n    this.props.login(login, password).then(() => {\n      this.props.history.push('/');\n    });\n  } // handleKeyDown(event) {\n  //     event.preventDefault()\n  // }\n\n\n  render() {\n    let {\n      login,\n      password\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041B\\u043E\\u0433\\u0438\\u043D:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: login,\n            onChange: this.handleLoginChange,\n            onKeyDown: this.handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: this.handlePasswordChange,\n            onKeyDown: this.handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          value: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n          className: \"btn btn-primary\",\n          onClick: this.handleSubmit,\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.username\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (...args) => dispatch(login(...args))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(login);","map":{"version":3,"sources":["/home/daniil/WebstormProjects/untitled1/src/components/login_page.js"],"names":["React","problems_list","user","Header","connect","login","Component","constructor","props","password","state","handleLoginChange","bind","handlePasswordChange","handleSubmit","event","setState","target","value","preventDefault","then","history","push","render","handleKeyDown","mapStateToProps","username","mapDispatchToProps","dispatch","args"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {problems_list, user} from \"./globals\";\nimport Header from \"../model\";\nimport {connect} from \"react-redux\";\n\nclass login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.login = '';\n        this.password = '';\n\n        this.state = {login: '', password: ''};\n\n        this.handleLoginChange = this.handleLoginChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    // state = {\n    //     login: '',\n    //     password: '',\n    // }\n\n    handleLoginChange(event) {\n        this.setState({login: event.target.value});\n    }\n\n    handlePasswordChange(event) {\n        this.setState({password: event.target.value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const {\n            login,\n            password\n        } = this.state;\n\n\n        this.props.login(login, password).then(() => {\n            this.props.history.push('/');\n        })\n    }\n\n    // handleKeyDown(event) {\n    //     event.preventDefault()\n    // }\n\n\n\n    render() {\n        let {login, password} = this.state;\n        return (\n            <div>\n                <Header user={user}/>\n                <form>\n                    <label>\n                        Логин:\n                        <input type=\"text\" value={login} onChange={this.handleLoginChange} onKeyDown={this.handleKeyDown}/>\n                        Пароль:\n                        <input type=\"password\" value={password} onChange={this.handlePasswordChange} onKeyDown={this.handleKeyDown}/>\n                    </label>\n                    <button type=\"submit\" value=\"Войти\" className=\"btn btn-primary\" onClick={this.handleSubmit}>Войти</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        username: state.username\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        login: (...args) => dispatch(login(...args)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(login);"]},"metadata":{},"sourceType":"module"}