{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/daniil/WebstormProjects/untitled1/src/components/edit.js\";\nimport React from 'react';\nimport { problems_list, user } from \"./globals\";\nimport Header from \"../model\";\nimport { connect } from \"react-redux\";\n\nclass EditForm extends React.Component {\n  constructor({\n    match,\n    props\n  }) {\n    super(props);\n\n    this.handleKeyDown = event => {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n      }\n    };\n\n    const {\n      params: {\n        problem_id\n      }\n    } = match;\n    this.id = problem_id;\n    this.problem = this.props.problems_list.get(Number(this.id));\n    this.state = {\n      name: this.problem.name,\n      task: this.problem.task,\n      solution: this.problem.solution,\n      author: this.problem.author\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChangeName(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  handleChangeTask(event) {\n    this.setState({\n      task: event.target.value\n    });\n  }\n\n  handleChangeSolution(event) {\n    this.setState({\n      solution: event.target.value\n    });\n  }\n\n  handleChangeAuthor(event) {\n    this.setState({\n      author: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    problems_list[this.id].name = this.state.value;\n    this.props.history.push(`/problem/${this.id}`);\n  }\n\n  render() {\n    let {\n      name,\n      task,\n      solution,\n      author\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: this.handleChangeName,\n            onKeyDown: this.handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), \"\\u0423\\u0441\\u043B\\u043E\\u0432\\u0438\\u0435:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: task,\n            onChange: this.handleChangeTask,\n            onKeyDown: this.handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), \"\\u0420\\u0435\\u0448\\u0435\\u043D\\u0438\\u0435:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: solution,\n            onChange: this.handleChangeSolution,\n            onKeyDown: this.handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), \"\\u0410\\u0432\\u0442\\u043E\\u0440:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: author,\n            onChange: this.handleChangeAuthor,\n            onKeyDown: this.handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    problems_list: state.userReducer.problems\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm);","map":{"version":3,"sources":["/home/daniil/WebstormProjects/untitled1/src/components/edit.js"],"names":["React","problems_list","user","Header","connect","EditForm","Component","constructor","match","props","handleKeyDown","event","key","preventDefault","params","problem_id","id","problem","get","Number","state","name","task","solution","author","handleChange","bind","handleSubmit","handleChangeName","setState","target","value","handleChangeTask","handleChangeSolution","handleChangeAuthor","history","push","render","mapStateToProps","userReducer","problems","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {problems_list, user} from \"./globals\";\nimport Header from \"../model\";\nimport {connect} from \"react-redux\";\n\nclass EditForm extends React.Component {\n    constructor({match, props}) {\n        super(props);\n        const {params: {problem_id}} = match;\n        this.id = problem_id;\n        this.problem = this.props.problems_list.get(Number(this.id))\n        this.state = {\n            name: this.problem.name,\n            task: this.problem.task,\n            solution: this.problem.solution,\n            author: this.problem.author\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChangeName(event) {\n        this.setState({name: event.target.value});\n    }\n    handleChangeTask(event) {\n        this.setState({task: event.target.value});\n    }\n    handleChangeSolution(event) {\n        this.setState({solution: event.target.value});\n    }\n    handleChangeAuthor(event) {\n        this.setState({author: event.target.value});\n    }\n\n\n    handleSubmit(event) {\n        problems_list[this.id].name = this.state.value;\n        this.props.history.push(`/problem/${this.id}`)\n    }\n\n    handleKeyDown = event => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n        }\n    }\n\n    render() {\n        let {name, task, solution, author} = this.state;\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Название:\n                        <input type=\"text\" value={name} onChange={this.handleChangeName}\n                               onKeyDown={this.handleKeyDown}/>\n                        Условие:\n                        <input type=\"text\" value={task} onChange={this.handleChangeTask}\n                               onKeyDown={this.handleKeyDown}/>\n                        Решение:\n                        <input type=\"text\" value={solution} onChange={this.handleChangeSolution}\n                               onKeyDown={this.handleKeyDown}/>\n                        Автор:\n                        <input type=\"text\" value={author} onChange={this.handleChangeAuthor}\n                               onKeyDown={this.handleKeyDown}/>\n                    </label>\n                    <input type=\"submit\" value=\"Сохранить\" className=\"btn btn-primary\"/>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        problems_list: state.userReducer.problems\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm);"]},"metadata":{},"sourceType":"module"}