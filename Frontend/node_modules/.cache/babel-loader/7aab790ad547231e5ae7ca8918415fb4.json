{"ast":null,"code":"import User from './user';\nimport { users } from \"../globals\";\n\nfunction resolve(x) {\n  return new Promise(func => {\n    setTimeout(() => {\n      func(x);\n    }, 1);\n  });\n}\n\nconst userService = {\n  async login(login, password) {\n    if (!users.has(login)) {\n      return reject(\"No user with such username\");\n    } else {\n      if (users.get(login).Password !== password) {\n        return reject(\"Incorrect password\");\n      } else {\n        users.get(login).Logged = true;\n        console.log('users', users);\n        return resolve({\n          user: users.get(login)\n        });\n      }\n    }\n  },\n\n  async logout(login) {\n    users.get(login).isLogged = false;\n    return resolve({\n      user: null\n    });\n  },\n\n  async register(login, password) {\n    users.set(login, new User(login, password, true));\n    return resolve({\n      user: users.get(login)\n    });\n  }\n\n};\nexport default userService;","map":{"version":3,"sources":["/home/daniil/WebstormProjects/untitled1/src/User/index.js"],"names":["User","users","resolve","x","Promise","func","setTimeout","userService","login","password","has","reject","get","Password","Logged","console","log","user","logout","isLogged","register","set"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAAQC,KAAR,QAAoB,YAApB;;AAEA,SAASC,OAAT,CAAiBC,CAAjB,EAAoB;AAChB,SAAO,IAAIC,OAAJ,CAAYC,IAAI,IAAI;AACvBC,IAAAA,UAAU,CAAC,MAAM;AAAED,MAAAA,IAAI,CAACF,CAAD,CAAJ;AAAU,KAAnB,EAAqB,CAArB,CAAV;AACH,GAFM,CAAP;AAGH;;AAED,MAAMI,WAAW,GAAG;AAChB,QAAMC,KAAN,CAAYA,KAAZ,EAAmBC,QAAnB,EAA6B;AACzB,QAAI,CAACR,KAAK,CAACS,GAAN,CAAUF,KAAV,CAAL,EAAuB;AACnB,aAAOG,MAAM,CAAC,4BAAD,CAAb;AACH,KAFD,MAEO;AACH,UAAIV,KAAK,CAACW,GAAN,CAAUJ,KAAV,EAAiBK,QAAjB,KAA8BJ,QAAlC,EAA4C;AACxC,eAAOE,MAAM,CAAC,oBAAD,CAAb;AACH,OAFD,MAEO;AACHV,QAAAA,KAAK,CAACW,GAAN,CAAUJ,KAAV,EAAiBM,MAAjB,GAA0B,IAA1B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBf,KAArB;AACA,eAAOC,OAAO,CAAC;AAACe,UAAAA,IAAI,EAAEhB,KAAK,CAACW,GAAN,CAAUJ,KAAV;AAAP,SAAD,CAAd;AACH;AACJ;AACJ,GAbe;;AAehB,QAAMU,MAAN,CAAaV,KAAb,EAAoB;AAChBP,IAAAA,KAAK,CAACW,GAAN,CAAUJ,KAAV,EAAiBW,QAAjB,GAA4B,KAA5B;AACA,WAAOjB,OAAO,CAAC;AAACe,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAd;AACH,GAlBe;;AAoBhB,QAAMG,QAAN,CAAeZ,KAAf,EAAsBC,QAAtB,EAAgC;AAC5BR,IAAAA,KAAK,CAACoB,GAAN,CAAUb,KAAV,EAAiB,IAAIR,IAAJ,CAASQ,KAAT,EAAgBC,QAAhB,EAA0B,IAA1B,CAAjB;AACA,WAAOP,OAAO,CAAC;AAACe,MAAAA,IAAI,EAAEhB,KAAK,CAACW,GAAN,CAAUJ,KAAV;AAAP,KAAD,CAAd;AACH;;AAvBe,CAApB;AA2BA,eAAeD,WAAf","sourcesContent":["import User from './user'\nimport {users} from \"../globals\";\n\nfunction resolve(x) {\n    return new Promise(func => {\n        setTimeout(() => { func(x); }, 1);\n    });\n}\n\nconst userService = {\n    async login(login, password) {\n        if (!users.has(login)) {\n            return reject(\"No user with such username\");\n        } else {\n            if (users.get(login).Password !== password) {\n                return reject(\"Incorrect password\");\n            } else {\n                users.get(login).Logged = true;\n                console.log('users', users);\n                return resolve({user: users.get(login)});\n            }\n        }\n    },\n\n    async logout(login) {\n        users.get(login).isLogged = false;\n        return resolve({user: null});\n    },\n\n    async register(login, password) {\n        users.set(login, new User(login, password, true))\n        return resolve({user: users.get(login)});\n    },\n\n}\n\nexport default userService"]},"metadata":{},"sourceType":"module"}