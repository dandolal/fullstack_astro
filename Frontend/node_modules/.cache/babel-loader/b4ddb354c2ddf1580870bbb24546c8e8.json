{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/daniil/WebstormProjects/untitled1/src/components/edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport Problem from \"../problem/Problem\";\n\nfunction EditForm(props) {\n  _s();\n\n  const {\n    params: id\n  } = props.match;\n  console.log(id.problem_id);\n  console.log(props.match);\n  console.log(props);\n  const problem = props.problems_list.get(Number(id.problem_id));\n  const [state, setState] = useState({\n    name: problem.name,\n    task: problem.task,\n    solution: problem.solution,\n    author: problem.author\n  });\n\n  const handleChangeName = event => {\n    setState({ ...state,\n      name: event.target.value\n    });\n  };\n\n  const handleChangeTask = event => {\n    setState({ ...state,\n      task: event.target.value\n    });\n  };\n\n  const handleChangeSolution = event => {\n    setState({ ...state,\n      solution: event.target.value\n    });\n  };\n\n  const handleChangeAuthor = event => {\n    setState({ ...state,\n      author: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    props.history.push(`/problem/${id}`);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n    }\n  };\n\n  let {\n    name,\n    task,\n    solution,\n    author\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: handleChangeName,\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), \"\\u0423\\u0441\\u043B\\u043E\\u0432\\u0438\\u0435:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: task,\n          onChange: handleChangeTask,\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), \"\\u0420\\u0435\\u0448\\u0435\\u043D\\u0438\\u0435:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: solution,\n          onChange: handleChangeSolution,\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), \"\\u0410\\u0432\\u0442\\u043E\\u0440:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: author,\n          onChange: handleChangeAuthor,\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n        className: \"btn btn-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this);\n}\n\n_s(EditForm, \"iMUQMfLvMd15OrDGoMs0UrE8yqU=\");\n\n_c = EditForm;\n\nconst mapStateToProps = state => {\n  return {\n    problems_list: state.userReducer.problems\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["/home/daniil/WebstormProjects/untitled1/src/components/edit.js"],"names":["React","useState","connect","Problem","EditForm","props","params","id","match","console","log","problem_id","problem","problems_list","get","Number","state","setState","name","task","solution","author","handleChangeName","event","target","value","handleChangeTask","handleChangeSolution","handleChangeAuthor","handleSubmit","history","push","handleKeyDown","key","preventDefault","mapStateToProps","userReducer","problems","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,SAAUC,QAAV,CAAmBC,KAAnB,EAAyB;AAAA;;AACrB,QAAM;AAACC,IAAAA,MAAM,EAAEC;AAAT,MAAeF,KAAK,CAACG,KAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,EAAE,CAACI,UAAf;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACG,KAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,QAAMO,OAAO,GAAGP,KAAK,CAACQ,aAAN,CAAoBC,GAApB,CAAwBC,MAAM,CAACR,EAAE,CAACI,UAAJ,CAA9B,CAAhB;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC;AAACiB,IAAAA,IAAI,EAAEN,OAAO,CAACM,IAAf;AAC/BC,IAAAA,IAAI,EAAEP,OAAO,CAACO,IADiB;AAE/BC,IAAAA,QAAQ,EAAER,OAAO,CAACQ,QAFa;AAG/BC,IAAAA,MAAM,EAAET,OAAO,CAACS;AAHe,GAAD,CAAlC;;AAMA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChCN,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWE,MAAAA,IAAI,EAAEK,KAAK,CAACC,MAAN,CAAaC;AAA9B,KAAD,CAAR;AACH,GAFD;;AAGA,QAAMC,gBAAgB,GAAIH,KAAD,IAAW;AAChCN,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWG,MAAAA,IAAI,EAAEI,KAAK,CAACC,MAAN,CAAaC;AAA9B,KAAD,CAAR;AACH,GAFD;;AAGA,QAAME,oBAAoB,GAAIJ,KAAD,IAAW;AACpCN,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWI,MAAAA,QAAQ,EAAEG,KAAK,CAACC,MAAN,CAAaC;AAAlC,KAAD,CAAR;AACH,GAFD;;AAGA,QAAMG,kBAAkB,GAAIL,KAAD,IAAW;AAClCN,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWK,MAAAA,MAAM,EAAEE,KAAK,CAACC,MAAN,CAAaC;AAAhC,KAAD,CAAR;AACH,GAFD;;AAKA,QAAMI,YAAY,GAAIN,KAAD,IAAW;AAE5BlB,IAAAA,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAoB,YAAWxB,EAAG,EAAlC;AACH,GAHD;;AAKA,QAAMyB,aAAa,GAAIT,KAAD,IAAW;AAC7B,QAAIA,KAAK,CAACU,GAAN,KAAc,OAAlB,EAA2B;AACvBV,MAAAA,KAAK,CAACW,cAAN;AACH;AACJ,GAJD;;AAOI,MAAI;AAAChB,IAAAA,IAAD;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA;AAAvB,MAAiCL,KAArC;AACA,sBACI;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEa,YAAhB;AAAA,8BACI;AAAA,qFAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEX,IAA1B;AAAgC,UAAA,QAAQ,EAAEI,gBAA1C;AACO,UAAA,SAAS,EAAEU;AADlB;AAAA;AAAA;AAAA;AAAA,gBAFJ,8DAKI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEb,IAA1B;AAAgC,UAAA,QAAQ,EAAEO,gBAA1C;AACO,UAAA,SAAS,EAAEM;AADlB;AAAA;AAAA;AAAA;AAAA,gBALJ,8DAQI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEZ,QAA1B;AAAoC,UAAA,QAAQ,EAAEO,oBAA9C;AACO,UAAA,SAAS,EAAEK;AADlB;AAAA;AAAA;AAAA;AAAA,gBARJ,kDAWI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEX,MAA1B;AAAkC,UAAA,QAAQ,EAAEO,kBAA5C;AACO,UAAA,SAAS,EAAEI;AADlB;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAeI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,wDAA3B;AAAuC,QAAA,SAAS,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBP;;GA7DS5B,Q;;KAAAA,Q;;AA+DV,MAAM+B,eAAe,GAAInB,KAAD,IAAW;AAC/B,SAAO;AACHH,IAAAA,aAAa,EAAEG,KAAK,CAACoB,WAAN,CAAkBC;AAD9B,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO,EAAP;AACH,CAFD;;AAIA,eAAerC,OAAO,CAACiC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClC,QAA7C,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport Problem from \"../problem/Problem\";\n\nfunction  EditForm(props){\n    const {params: id} = props.match;\n    console.log(id.problem_id)\n    console.log(props.match)\n    console.log(props)\n    const problem = props.problems_list.get(Number(id.problem_id))\n    const [state, setState] = useState({name: problem.name,\n        task: problem.task,\n        solution: problem.solution,\n        author: problem.author})\n\n\n    const handleChangeName = (event) => {\n        setState({...state, name: event.target.value});\n    }\n    const handleChangeTask = (event) => {\n        setState({...state, task: event.target.value});\n    }\n    const handleChangeSolution = (event) => {\n        setState({...state, solution: event.target.value});\n    }\n    const handleChangeAuthor = (event) => {\n        setState({...state, author: event.target.value});\n    }\n\n\n    const handleSubmit = (event) => {\n\n        props.history.push(`/problem/${id}`)\n    }\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n        }\n    }\n\n\n        let {name, task, solution, author} = state;\n        return (\n            <div>\n                <form onSubmit={handleSubmit}>\n                    <label>\n                        Название:\n                        <input type=\"text\" value={name} onChange={handleChangeName}\n                               onKeyDown={handleKeyDown}/>\n                        Условие:\n                        <input type=\"text\" value={task} onChange={handleChangeTask}\n                               onKeyDown={handleKeyDown}/>\n                        Решение:\n                        <input type=\"text\" value={solution} onChange={handleChangeSolution}\n                               onKeyDown={handleKeyDown}/>\n                        Автор:\n                        <input type=\"text\" value={author} onChange={handleChangeAuthor}\n                               onKeyDown={handleKeyDown}/>\n                    </label>\n                    <input type=\"submit\" value=\"Сохранить\" className=\"btn btn-primary\"/>\n                </form>\n            </div>\n        );\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        problems_list: state.userReducer.problems\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm);"]},"metadata":{},"sourceType":"module"}